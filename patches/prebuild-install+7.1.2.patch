diff --git a/node_modules/prebuild-install/bin.js b/node_modules/prebuild-install/bin.js
index e5260cc..6f39afb 100755
--- a/node_modules/prebuild-install/bin.js
+++ b/node_modules/prebuild-install/bin.js
@@ -7,8 +7,6 @@ const napi = require('napi-build-utils')
 const pkg = require(path.resolve('package.json'))
 const rc = require('./rc')(pkg)
 const log = require('./log')(rc, process.env)
-const download = require('./download')
-const asset = require('./asset')
 const util = require('./util')
 
 const prebuildClientVersion = require('./package.json').version
@@ -41,38 +39,6 @@ const opts = Object.assign({}, rc, { pkg: pkg, log: log })
 
 if (napi.isNapiRuntime(rc.runtime)) napi.logUnsupportedVersion(rc.target, log)
 
-const origin = util.packageOrigin(process.env, pkg)
-
-if (opts.force) {
-  log.warn('install', 'prebuilt binaries enforced with --force!')
-  log.warn('install', 'prebuilt binaries may be out of date!')
-} else if (origin && origin.length > 4 && origin.substr(0, 4) === 'git+') {
-  log.info('install', 'installing from git repository, skipping download.')
-  process.exit(1)
-} else if (opts.buildFromSource) {
-  log.info('install', '--build-from-source specified, not attempting download.')
-  process.exit(1)
-}
-
-const startDownload = function (downloadUrl) {
-  download(downloadUrl, opts, function (err) {
-    if (err) {
-      log.warn('install', err.message)
-      return process.exit(1)
-    }
-    log.info('install', 'Successfully installed prebuilt binary!')
-  })
-}
-
-if (opts.token) {
-  asset(opts, function (err, assetId) {
-    if (err) {
-      log.warn('install', err.message)
-      return process.exit(1)
-    }
-
-    startDownload(util.getAssetUrl(opts, assetId))
-  })
-} else {
-  startDownload(util.getDownloadUrl(opts))
+module.exports = function resolveDownloadUrl() {
+  return util.getDownloadUrl(opts)
 }
